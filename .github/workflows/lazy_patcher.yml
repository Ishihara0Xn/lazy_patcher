name: Lazy Framework Patcher

on:
  workflow_dispatch:
    inputs:
      file_urls:
        description: 'Paste URLs for JAR/APK files (one per line, e.g., framework.jar, services.jar, core.jar, myapp.apk)'
        required: true
        type: string

env:
  ARTIFACT_DIR: patched_files_${{ github.run_id }}
  BUILD_DATE: ${{ github.run_id }}

jobs:
  patch:
    name: Patch Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget

      - name: Create directories
        run: |
          mkdir -p rom/system/system/framework
          mkdir -p rom/system/system/app
          mkdir -p "${{ env.ARTIFACT_DIR }}"

      - name: Download provided files
        run: |
          echo "${{ inputs.file_urls }}" > file_urls.txt
          while IFS= read -r url; do
            # Skip blank and comment lines
            [[ -z "$url" || "$url" =~ ^# ]] && continue
            fname=$(basename "$url")
            ext="${fname##*.}"
            if [[ "$ext" == "jar" ]]; then
              dest="rom/system/system/framework/$fname"
              mkdir -p rom/system/system/framework
            elif [[ "$ext" == "apk" ]]; then
              dest="rom/system/system/app/$fname"
              mkdir -p rom/system/system/app
            else
              echo "Skipping unsupported file: $fname"
              continue
            fi
            echo "Downloading $url to $dest"
            wget --no-verbose --show-progress "$url" -O "$dest"
            status=$?
            if [[ $status -ne 0 ]]; then
              echo "ERROR: Failed to download $url (exit code $status)"
              rm -f "$dest"
              exit $status
            fi
            echo "Downloaded $dest"
          done < file_urls.txt

      - name: Make patcher executable
        run: chmod +x lazy_patcher.sh

      - name: Run patcher
        run: |
          ./lazy_patcher.sh rom
          echo "Patcher completed successfully"

      - name: Collect artifacts
        run: |
          find rom/system/system/framework -type f -name '*.jar' -exec cp {} "${{ env.ARTIFACT_DIR }}/" \;
          find rom/system/system/app -type f -name '*.apk' -exec cp {} "${{ env.ARTIFACT_DIR }}/" \;
          echo "Generated artifacts:"
          ls -lh "${{ env.ARTIFACT_DIR }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: patched-files
          path: ${{ env.ARTIFACT_DIR }}/*
          retention-days: 7
